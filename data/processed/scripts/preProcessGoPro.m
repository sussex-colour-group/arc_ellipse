% Process data into the format needed

%% Convert mat file to csv

clc, clear, close all

% Raw data not shared (privacy, and also it is 1.3TB)
% .mat file generated by: arc_ellipse/arc_ImageAnalysis/arc_extractGoProImageStatsV1.m
% TODO Still not sure whether we will share this 1.5GB .mat file
load(['..',filesep,'..',filesep,'raw',filesep,'GoPro',filesep,'arc_GoProStats_V1.mat'])

% remove some fields which won't work nicely in a csv
fileList = rmfield(fileList,'FM_O');
fileList = rmfield(fileList,'FM_T');
fileList = rmfield(fileList,'MondStats');
fileList = rmfield(fileList,'DiscrStats');

writetable(struct2table(fileList),['..',filesep,'GoPro.csv']);

%% Convert that csv into a matrix that is easier for later plotting

clc, clear, close all

t = readtable(['..',filesep,'GoPro.csv']);

mat = NaN([size(t,1),5]);

for i = 1:size(t,1)
    try
        % locationNames = {'Tromso','Oslo'};
        if strcmp(t.location{i},'Tromso')
            mat(i,1) = 0;
        elseif strcmp(t.location{i},'Oslo')
            mat(i,1) = 1;
        end

        % seasonNames = {'Summer','Autumn','Winter','Spring'};
        if strcmp(t.season{i},'Summer')
            mat(i,2) = 1;
        elseif strcmp(t.season{i},'Autumn')
            mat(i,2) = 2;
        elseif strcmp(t.season{i},'Winter')
            mat(i,2) = 3;
        elseif strcmp(t.season{i},'Spring')
            mat(i,2) = 4;
        end

        mat(i,3) = t.AxisRatioNormed(i);
        mat(i,4) = t.EllipseAngle(i);
        mat(i,5) = t.EllipseArea(i);

    catch
        % warning('data transformation issue')
    end
end

writetable(mat,['..',filesep,'GoPro_sub.csv']);
